
// factorials of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]
// 1 2 6 24 120 720 5040 40320 362880 3628800 39916800 479001600 6227020800 87178291200 1307674368000 20922789888000 355687428096000 6402373705728000 121645100408832000 2432902008176640000
// Notice the zeroes > 5/5 = 1 = no of zeroes in 120 (5!), 10/5 = 2 = no of zeroes in 3628800 (10!) and so on.

func trailingZeroes(n int) int {
	zeros := 0

	for n > 0 {
		zeros += n / 5
		n = n / 5
	}

	return zeros
}